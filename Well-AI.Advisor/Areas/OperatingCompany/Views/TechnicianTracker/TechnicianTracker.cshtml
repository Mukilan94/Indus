@{
    ViewData["Title"] = "Technician Tracker";
}
@model WellAI.Advisor.Model.OperatingCompany.Models.TechnicianTracker
<section class="content-header">
</section>
<!-- Main content -->
<section class="content">
    <div class="leftpart">
        <div class="row k-window-titlebar" style="height: 35px !important; border-radius: 10px 10px 0px 0px">
                <h5 class="col-md-12" style=" text-align: left;font-size:12px;">@Model.RigName - @Model.WellName : @Model.Job</h5>
        </div>
        <div class="row" style="background-color:white;color:black;border-left:5px solid #007BFF">
            <div class="col-sm-12">
                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Job)
                    </div>
                    <div class="col-sm-8">
                        @Html.DisplayFor(model => model.Job)
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.DateAwared)
                    </div>
                    <div class="col-sm-8">
                        @Html.DisplayFor(model => model.DateAwared)
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.OperatorCompanyName)
                    </div>
                    <div class="col-sm-8">
                        @Html.DisplayFor(model => model.OperatorCompanyName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.WellName)
                        @Html.HiddenFor(model => model.WellId)
                    </div>
                    <div class="col-sm-8">
                        @Html.DisplayFor(model => model.WellName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.OperatorUserName)
                    </div>
                    <div class="col-sm-8">
                        @Html.DisplayFor(model => model.OperatorUserName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.OperatorMobile)
                    </div>
                    <div class="col-sm-8">
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.ProjectStatus)
                    </div>
                    <div class="col-sm-5">
                        @Html.HiddenFor(x => x.ProjectId)
                        @Html.DisplayFor(model => model.ProjectStatusName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.ExpectedStartDate, "Expected Start")
                    </div>
                    <div class="col-sm-8">
                        @Html.DisplayFor(model => model.ExpectedStartDate)
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.ActualStartDate, "Actual Start")
                    </div>
                    <div class="col-sm-8">
                        @Html.DisplayFor(model => model.ActualStartDate)
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.ExpectedEndDate, "Expected End")
                    </div>
                    <div class="col-sm-8">
                        @Html.DisplayFor(model => model.ExpectedEndDate)
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.ActualEndDate, "Actual End")
                    </div>
                    <div class="col-sm-8">
                        @Html.DisplayFor(model => model.ActualEndDate)
                    </div>
                </div>
                @if (Model.ServiceVehicleViewModels.Count > 0)
                {
                    <table class="table" style="margin-left:-10px!important">
                        <thead>
                            <tr>
                                <th scope="col">Technician Name</th>
                                <th scope="col">Track</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.ServiceVehicleViewModels)
                            {
                                <tr>
                                    <td>
                                        @item.TechnicianName
                                                                        @if (item.TechnicianId == ViewBag.TechnicianId)
                                                                        {
                                                                            <input type="hidden" id="hiddenSamaaraid" value="@item.Samaaraid" />
                                                                        }
                                                                    </td>
                                    <td><a href='javascript:void(0);' onclick='getLatLngOfVehicle("@item.Samaaraid")' class='linkstyle'><i class='fa fa-truck'></i></a></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <input type="hidden" id="hiddenSamaaraid" value="notfound" />
                }
            </div>
        </div>
        <div class="row k-window-titlebar" style="border-radius: 0px 0px 10px 10px;">
            <h5 class="col-md-12" style=" text-align: center">
                <a  href="javascript:void(0)" onclick="openDrillPlan()" style="color:white">Open Drill Plan</a>
            </h5>
        </div>
    </div>
    <div class="rightpart" id="map1">
        @(Html.Kendo().Map()
        .Name("map")
        .Center(30.268107, -97.744821)
        .Zoom(15)
        .Layers(layers =>
        {
            layers.Add()
                .Type(MapLayerType.Tile)
                .UrlTemplate("http://#= subdomain #.tile.openstreetmap.org/#= zoom #/#= x #/#= y #.png")
                .Subdomains("a", "b", "c")
                .Attribution("&copy; <a href='http://osm.org/copyright'>OpenStreetMap contributors</a>");
        }))
    </div>
</section>
<style>
    .rightpart {
        min-height:100% !important;
    }
    .k-map {
        height: 650px !important;
    }
    .k-map .k-marker {
            font-size: 5rem;
        }
    .k-grid-header .k-header > .k-link {
        text-transform: uppercase;
        font-weight: 900 !important;
        font-size: 12px !important;
    }
    .k-grid-content {
        height: auto !important;
    }
    .k-pager-wrap.k-pager-lg .k-pager-numbers li:not(.k-current-page), .k-pager-wrap.k-pager-md .k-pager-numbers li:not(.k-current-page), .k-pager-wrap.k-pager-sm .k-pager-numbers li:not(.k-current-page) {
        display: block !important;
    }
    .k-pager-wrap.k-pager-lg .k-pager-nav + .k-pager-numbers-wrap, .k-pager-wrap.k-pager-md .k-pager-nav + .k-pager-numbers-wrap, .k-pager-wrap.k-pager-sm .k-pager-nav + .k-pager-numbers-wrap {
        width: unset !important;
        height: calc(1*(2px + 0.75rem + 1.5em));
        box-sizing: border-box;
        border-color: inherit;
        margin: 0 0.375rem;
    }
    .k-pager-wrap.k-pager-lg .k-pager-numbers .k-link,
    .k-pager-wrap.k-pager-lg .k-pager-numbers .k-state-selected, .k-pager-wrap.k-pager-md .k-pager-numbers .k-link,
    .k-pager-wrap.k-pager-md .k-pager-numbers .k-state-selected, .k-pager-wrap.k-pager-sm .k-pager-numbers .k-link,
    .k-pager-wrap.k-pager-sm .k-pager-numbers .k-state-selected {
        margin: 0;
        border-width: 0;
        width: unset !important;
        height: unset !important;
    }
    .k-pager-numbers {
        display: contents !important;
    }
    div.k-loading-mask {
        z-index: 3; /* must be larger than the z-index:2 of #container */
    }
    .chathisttitle {
        color: #ffffff;
    }
   .leftpart {
        width: 31%;
        display: inline-block;
        vertical-align: top;
        margin-left:10px
    }
    .rightpart {
        width: 65%;
        display: inline-block;
        margin-left:20px;
    }
    .content {
    }
    .k-pager-numbers {

       padding-top:11px;
    }
    .km-widget {
        border: 4px solid #007BFF;
        border-radius: 10px;
    }
    .k-pos-left {
        right: 0;
        left: unset;
    }
    .k-pos-top {
        top: unset;
        bottom: 10px;
    }
</style>
<script>
    $(window).on('load', function () {
        var hiddenSamaaraid = $("#hiddenSamaaraid").val();
        if (hiddenSamaaraid !== "notfound") {
            getLatLngOfVehicle(hiddenSamaaraid);
        }
    });

    //DWOP

    function openDrillPlan() {
        const url = '@Url.Action("GetDrillPlan", "TechnicianTracker", new { wellId = Model.WellId, tenantId = Model.OperatorTenantId })';

        $.ajax({
            url: url,
            type: "POST",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data)
            {
                if(data != null)
                {
                    const DrillPlanId = data.DrillPlanId;
                    sessionStorage.setItem("DrillPlanId", DrillPlanId);
                    window.location.href = '@Url.Action("Index", "ActiveDrillPlan")';
                }
            }
        });
    }


    // Map Code Start
    var sidv = '';
    function getLatLngOfVehicle(sid) {
        displayLoading("#map1", true);
            $.ajax({
                url: "/TechnicianTracker/getLatLngOfVehicle?Id=" + sid,
                type: 'Get',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    //alert(data);
                    if (data != null) {
                        sidv = sid;
                        displayLoading("#map1", false);
                        createMap(data.latitude, data.longitude, data.reverseGeo.formattedLocation);
                    }
                    else {
                        displayLoading("#map1", false);
                    }
                },error: function (XMLHttpRequest, textStatus, errorThrown) {
                    displayLoading("#map1", false);
                }
            });
    }
    function createMap(Lat, Long, content) {
        $("#map").kendoMap({
            center: [Lat, Long],
            zoom: 15,
            layers: [{
                type: "tile",
                urlTemplate: "http://#= subdomain #.tile.openstreetmap.org/#= zoom #/#= x #/#= y #.png",
                subdomains: ["a", "b", "c"],
                attribution: "&copy; <a href='http://osm.org/copyright'>OpenStreetMap</a> contributors"
            }],
            markers: [{
                location: [Lat, Long],
                shape: "pinTarget",
                tooltip: {
                    content: content
                }
            }]
        });
    }
    function onClick(e) {
        var map = $("#map").data("kendoMap");
        var loc = map.eventToLocation(e);
        map.center(loc);
        map.markers.add({ location: loc });
    }
    function updateControls() {
        var map = $("#map").data("kendoMap");
        var center = map.center();
    }
    //Map End coding
    function onBidsGridRead(e) {
    }
    function displayLoading(target,bool) {
        var element = $(target);
        kendo.ui.progress(element, bool);
    }
</script>
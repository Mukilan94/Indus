@model WellAI.Advisor.Model.OperatingCompany.Models.WellsCountModel
@{
    ViewData["Title"] = "Register";
    var templateName = "";
}
<section class="content-header">
    <style>

        #map { position: absolute; top: 0; bottom: 0; width: 100%; }

        .k-i-filter-clear {
            color: #007bff !important;
        }
        .k-window {
            border-radius: 5px !important;
        }
        .k-window-titlebar {
            background-color: #007BFF;
            color: white;
        }
        .k-grid-header .k-header > .k-link {
            text-transform: uppercase;
            font-weight: 900 !important;
            font-size: 12px !important;
        }
        .k-grid-Details, .k-grid-Details:hover, .k-grid-Delete, .k-grid-Delete:hover {
            background-color: #fff;
        }
 .k-grid-edit, .k-grid-Delete, .k-grid-Details {
            border-radius: 10px;
        }
        .k-link k-state-selected {
            padding-top: 17px !important;
        }
        .k-pager-numbers {
            padding-top: 17px !important;
        }
        .k-grid .k-grid-add:hover {
            color: #fff !important;
        }
        .k-window-content #sidebar .k-edit-label {
            margin-left: -50px;
        }
        .k-grid-content {
            height: auto !important;
        }
        .k-window-content .k-edit-form-container {
            width: inherit;
        }
        .blockstyle {
            height: 75px;
            width: auto;
            min-width: 130px;
            display: inline-block;
            margin: 10px 5px 0 5px;
            background-color: #fff;
            border: 4px solid #007AFC;
            border-radius: 10px;
            position: relative;
            justify-content: space-between;
        }
            .topblocks {
            margin-left: -22px;
        }
.Wells-total {
            color: #000;
            font-size: 14px;
        }
        .Wells-totalval {
            color: #007bff;
            position: absolute;
            bottom: 0px;
            right: 10px;
            text-align: right;
            text-decoration: underline;
            font-weight: 500;
            cursor: pointer;
            font-size: 20px !important;
        }
        #welldatamaster {
            margin-top:20px;
        }
        .toptitle {
            color: #fff;
        }
        .Wells-toptitle {
            font-family: Roboto;
            margin-bottom: 0px;
            font-weight: bold;
            font-size: 22px;
        }
        .Wells-topdescription {
            color: #f1f2f8;
            font-weight: 300;
            letter-spacing: .75px;
            font-size: 10pX;
            width: 100%;
        }
        .inner > label {
            color: #000;
            display: block;
            text-align: left;
        }
        .inner {
            color: #000;
            font-size: 14px;
        }
        .small-box {
            box-shadow: none;
        }
        .k-switch{
            width:50px !important;
        }
        .btn-primary {
            background-color: #007bff;
            border-color: #367fa9;
            border-radius: 10px !important;
            font-weight: bold !important;
        }
        .k-alert{
            width:300px !important;
        }
    </style>
</section>
<!-- Main content -->
<section class="content">
    <div class="row toptitle col-12">
        <h4 class="Wells-toptitle">At a Glance</h4>
        <span class="Wells-topdescription">Click on any of key metrics to open the related screen</span>
    </div>
    <div class="row topblocks col-12">
        <div class="blockstyle" id="DrillingPlanCounts">
            <!-- small box -->
            <div class="small-box box-shad">
                <div class="inner">
                    <span class="Wells-total">Plans</span>
                </div>
            </div>
            <span class="Wells-totalval"><a id="DrillingPlanCounts">@Model.DrillingPlanCounts</a></span>
        </div>

        <div class="blockstyle" id="WellCounts">
            <!-- small box -->
            <div class="small-box box-shad">
                <div class="inner">
                    <span class="Wells-total">Wells</span>
                </div>
            </div>
            <span class="Wells-totalval"><a id="WellCounts1">@Model.WellCounts</a></span>
        </div>
        <!-- ./col -->
        <div class="blockstyle" id="RigCounts">
            <!-- small box -->
            <div class="small-box box-shad">
                <div class="inner">
                    <span class="Wells-total">Rigs</span>
                </div>
            </div>
            <span class="Wells-totalval"><a id="RigCounts1">@Model.RigCounts</a></span>
        </div>
        <div class="blockstyle" id="PadCounts">
            <!-- small box -->
            <div class="small-box box-shad">
                <div class="inner">
                    <span class="Wells-total">Pads</span>
                </div>
            </div>
            <span class="Wells-totalval"><a id="PadCounts1">@Model.PadCounts</a></span>
        </div>
    </div>
    @(Html.Kendo().Grid<WellAI.Advisor.Model.OperatingCompany.Models.WellMasterDataViewModel>
    ()
    .Name("welldatamaster")
    .HtmlAttributes(new { @class = "ra-section" })
    .Columns(columns =>
    {
        columns.Bound(p => p.wellId).Hidden();
        columns.Bound(p => p.wellName).Title("Well").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).ClientTemplate("<p><span style='background-color:#=chartColor#;font-weight:bold;width:20px;height:13px;'>&nbsp;&nbsp;&nbsp;&nbsp;</span>  #=wellName#</p>").Width(250);
        columns.Bound(p => p.basin).Title("Basin").Width(80).Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false)));
        columns.Bound(p => p.county).Title("County/Parish").Width(70).Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false)));
        columns.Bound(p => p.wellType).Title("Design").Width(150).Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false)));
        columns.Bound(p => p.rigName).Title("Rig").Width(150).Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false)));
        //columns.Bound(p => p.ChecklistTemplateName).Title("Template").Width(150).Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false)));
        columns.Bound(p => p.taskCount).Title("Jobs").Width(80).Filterable(false);
        columns.Bound(p => p.minSchdDate).Hidden();
        columns.Bound(p => p.maxSchdDate).Hidden();
        //columns.Bound(p => p.OldPredictionForUpdate).Title("Predict").Width(50).Filterable(false).ClientTemplate("#if (OldPredictionForUpdate == true) { #" +
        //                "<span class='text-success k-icon k-i-check'></span>" +
        //                "# } else { #" +
        //                "<span class='text-danger k-icon k-i-close'></span>" +
        //                "# } #");

        columns.Bound(p => p.chartColor).Hidden();
        columns.Command(command =>
        {
            command.Custom("Delete").Text("<i class='fa fa-trash' style='font-size:20px;'></i>").Click("customDelete");
        }).Title("Action").Width(30);
    })
    .Sortable()
     .Pageable(p =>
        p.Info(true)
         .Numeric(false)
         .PreviousNext(false)
    )
    .Groupable(false)
    .Scrollable(scrollable => scrollable.Virtual(true))
    .ToolBar(toolbar => toolbar.Create().Text("Add New Well"))
    .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("EditWell").Window(w => w.Title("Edit Well Details").Width(1000)))
    .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
    .Reorderable(r => r.Columns(true))
    .Resizable(r => r.Columns(true))
    .DataSource(dataSource => dataSource
    .Ajax()
    .Model(model => model.Id(p => p.wellId))
    .PageSize(10)
    .Batch(false)
    .Create(update => update.Action("WellData_Create", "WellData"))
    .Read(read => read.Action("GetWellData", "WellData"))
    .Update(update => update.Action("WellData_Update", "WellData"))
    )
    .Events(e =>
    {
        e.Save("onGridSave")
        .Edit("RenameWindow")
        .DataBound("onDataBound");
    })
    )
</section>
@(Html.Kendo().Window().Name("Creates")
    .Title("Add Well")
    .Visible(false)
    .Modal(true)
    .Actions(actions => actions
        .Close()
    )
    .Draggable(true)
    .Width(1000)
    .Events(events => events.Close("close"))
)
@(Html.Kendo().Window().Name("Details")
    .Title("Well Details")
    .Visible(false)
    .Actions(actions => actions
        .Close()
    )
    .Modal(true)
    .Draggable(true).Width(300)
)
<script type="text/x-kendo-template" id="template">
    <div id="details-container">
    </div>
</script>
<script id="noDataTemplate" type="text/x-kendo-template">
    <strong id="template">No Data Found!</strong>
</script>
<script>
    //Phase II changes - 02/17/2021
    var refreshInterval = setInterval(RefreshGrid, 150000);
    $(document).ready(function () {
        //RefreshGrid();
        //Phase II changes - 02/17/2021
        setInterval(CountsRefresh, 60000);
    });

    function alertbox(content, alerttitle) {
        $("<div></div>").kendoAlert({
            title: alerttitle,
            content: content,
            innerWidth:"400px"
        }).data("kendoAlert").open();
    }

    function onFilter() {
        return {
            text: $("#numAPI").val(),
            filterType: "API"
        };
    }


     //DWOP
    function onApiNumChange() {
         if ('@TempData["Error"]') {
             var autocomplete = $("#numAPI").data("kendoAutoComplete");
                    autocomplete.setOptions({ noDataTemplate: "Permission dined to access data." });
           }
    }


    //DWOP
    function onApiNumSelect(e) {
        var dataItem = this.dataItem(e.item.index());
        console.log(' dataItem api_number' + dataItem.api_number);
        console.log(' dataItem name ' + dataItem.name);
        if (dataItem.api_number != "") {
            $("#wellName").val(dataItem.name).trigger("change");
            $("#state").val(dataItem.state).trigger("change");
            $("#county").val(dataItem.county).trigger("change");
            $("#latitude").val(dataItem.latitude).trigger("change");
            $("#longitude").val(dataItem.longitude).trigger("change");
            $("#hdnRouterWellId").val(dataItem.id).trigger("change");            
        }
    }


    function CountsRefresh() {
        $.ajax({
            url: '/WellData/Counts',
            type: 'GET',
            success: function (ResponseData) {
                document.getElementById('WellCounts1').innerHTML = ResponseData.WellCounts;
                document.getElementById('RigCounts1').innerHTML = ResponseData.RigCounts;
                document.getElementById('PadCounts1').innerHTML = ResponseData.PadCounts;
                document.getElementById("DrillingPlanCounts") = ResponseData.DrillingPlanCounts;
            }
        });
        setInterval(CountsRefresh, 60000);
    }
    function RefreshGrid() {
        console.log('Refresh timer call');
        //Phase II changes - 02/17/2021
            $("#welldatamaster").data("kendoGrid").dataSource.read();
    }
    //Phase II changes - 02/17/2021
    function clearRefreshInterval() {
        clearInterval(refreshInterval);
    }

    function UpdateWellGrids()
    {
        $("#welldatamaster").data("kendoGrid").dataSource.read();
    }
    $(document).ready(function () {
        var GridObject = $("#welldatamaster").data("kendoGrid");
        var Url = "/WellData/GetWellData";
        $("#WellCounts").click(function () {
            GridObject.dataSource.transport.options.read.url = Url;
            GridObject.dataSource.read();
            GridObject.dataSource.filter({});
        });
        $("#RigCounts").click(function () {
            window.location.href = "/rigs";
        });
        $("#PadCounts").click(function () {
            window.location.href = "/pad";
        });

        $("#DrillingPlanCounts").click(function() {
            window.location.href = "/DrillingPlan/Index";
        });
    });
    function onGridSave(e) {
        setTimeout(function () {
            $('#welldatamaster').data('kendoGrid').dataSource.read().then(function () {
                $('#welldatamaster').data('kendoGrid').refresh();
            });
        }, 2600);
    }

    $(".k-grid-update").click(function () {
        setTimeout(function () {
            $('#welldatamaster').data('kendoGrid').dataSource.read().then(function () {
                $('#welldatamaster').data('kendoGrid').refresh();
            });
        }, 5000)
    });

    function RenameWindow(e) {
        //Phase II Changes
        clearRefreshInterval();
        if (e.model.isNew()) {
            e.container.data("kendoWindow").title("New Well");
        } else {
            $("#OldPredictionForUpdate").val(e.model.OldPredictionForUpdate).trigger("change");
            var colorPicker = $("#chartColor").data("kendoColorPicker");
            if (e.model.chartColor !== null && $.trim(e.model.chartColor).length>1)
                colorPicker.value(e.model.chartColor);
            //DWOP
            if (e.model.ChecklistTemplateName != null) {
                //alert(e.model.ChecklistTemplateName);
                //var checklist = $("#ChecklistTemplateId").data("kendoDropDownList");
                //checklist.text(e.model.ChecklistTemplateName);
                templateName = "Checklist Template 10";
            }
        }

    }
    function onDataBound() {
        var grid = this;
        grid.element.off('dblclick');
        grid.element.on('dblclick', 'tbody tr[data-uid]', function (e) {
            grid.editRow($(e.target).closest('tr'));
        });
        var Url = window.location.href;
		if (Url.includes('?')) {
			var recordId = Url.substring(1, Url.indexOf("?"));
			var clean_uri = Url.substring(0, Url.indexOf("?"));
			var grid = $('#welldatamaster');
			grid.editRow.trigger('tr[data-uid="' + recordId + '"]').trigger('dblclick');
		}
    }
    function DataBound(e) {
        var grid = this;
        grid.tbody.find("tr[role='row']").each(function () {
            var model = grid.dataItem(this);
        });
    }
</script>
<script type="text/javascript">
    var detailsTemplate = kendo.template($("#template").html());
    function showDetails(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wnd = $("#Details").data("kendoWindow");
        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
    }
    function customDelete(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        kendo.confirm("Are you sure you want to delete this?")
            .done(function () {
                    $.ajax({
                        url: "/WellData/WellDataDestroy?wellId=" + dataItem.wellId,
                        type: 'POST',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            var grid = $("#welldatamaster").data("kendoGrid");
                            grid.dataSource.read();
                            CountsRefresh();
                        }
                    });
            })
            .fail(function () {
                return false;
            });
    }

    //DWOP
    function FilterByWellDesign() {
        var typeId = $("#wellTypeId").data("kendoDropDownList")

        return {
            wellDesign: typeId.value()
        };
    }
</script>
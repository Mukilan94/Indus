@model WellAI.Advisor.Model.Administration.ChecklistTemplateModel
@using Kendo.Mvc.UI
@{

    var StageList = (List<WellAI.Advisor.Model.Administration.ServiceStageModel>)ViewData["StageList"];

}
<script type="text/javascript">
    //DWOP
    $(document).ready(function () {
        setTimeout(function () {
            var value = $("#ServiceDurationDays").val();
            if (value == "") {
                $("#ServiceDurationDays").val("00");
            }
        },2000);       
    });
</script>
<style>
    #ServiceDurationDays {
        font-size: smaller !important;
        font-weight: 600 !important;
        height: 28px !important;
    }
</style>
<div class="row">
    <div class="col-md-11 errors"></div>
</div>
<div class="row">
    <div class="col-md-2">
        <div class="k-edit-field">
            @Html.RadioButtonFor(m => m.IsSpecialServices, "1", new
            {
           id = "IsSpecialServices",
           onclick = "SelectedSpecialService(1)"

       })
            @Html.Label("Task", "Task")

        </div>
    </div>
    <div class="col-md-3">

        <div class="k-edit-field">
            @Html.RadioButtonFor(m => m.IsSpecialServices, "2", new
       {
           onclick = "SelectedSpecialService(2)"
       })

            @Html.Label("Service", "Service")
        </div>
    </div>
    <div class="col-md-4">

        <div class="k-edit-field">
            @Html.RadioButtonFor(m => m.IsSpecialServices, "3", new
       {
           onclick = "SelectedSpecialService(3)"
       })
            @Html.Label("SpecialService", "Special Service")

        </div>
    </div>
    <div class="col-md-3">
        <div class="k-edit-field">
            @Html.RadioButtonFor(m => m.IsSpecialServices, "4", new
       {
           onclick = "SelectedSpecialService(4)"
       })
            @Html.Label("Supply", "Supply")

        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-2">Name</div>
    <div class="col-md-10">
        @Html.TextBoxFor(model => model.Name, new { id = "name", style = "width:100%" })
        @Html.ValidationMessageFor(model => model.Name)

    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <div class="row">
            <div class="col-md-6">@Html.LabelFor(m => m.Day)</div>
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.Day, new { id = "Day", style = "width:100%" })
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="row">
            <div class="col-md-6" style="padding: 0px;">@Html.LabelFor(m => m.ScheduleTime)</div>
            <div class="col-md-6" style="padding: 0px;">
                <div style="height:0px;width:0px;margin:0;padding:0;visibility:hidden;">
                    @Html.Kendo().MaskedTextBoxFor(model => model.ScheduleTime)
                </div>
                @(Html.Kendo().TimePicker()
                         .Format("HH:mm")
                         .Name("ScheduleTimePicker")
                         .Events(e => e.Change("SchedulerTime"))
                         .HtmlAttributes(new { style = "width: 100%", title = "timepicker" })
                         )
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="row">
            <div class="col-md-6">@Html.LabelFor(m => m.Depth)</div>
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.Depth, new { id = "depth", style = "width:100%" })
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-8">
        <div class="row">
            <div class="col-md-3">@Html.LabelFor(m => m.ServiceDurationDays, "Duration")</div>
            <div class="col-md-9">
                <div class="col-md-4" style="float:left;padding: 0px !important;">

                    @Html.TextBoxFor(m => m.ServiceDurationDays, new { type = "number", style = "width:100%;flot:left;", min = 0 })
                    @Html.LabelFor(m => m.ServiceDurationDays, "Days")

                    @*@(Html.Kendo().MultiColumnComboBoxFor(m => m.ServiceDurationDays)
                           //.Name("ServiceDays")
                           .DataTextField("Text")
                           .DataValueField("Value")
                           .Value("00")
                           .Filter(FilterType.StartsWith)
                           .DataSource(source =>
                           {
                               source.Read(read =>
                               {
                                   read.Action("GetServiceDays", "WellTasks");//.Data("FilterCategory");
                               }).ServerFiltering(true);

                           })
                           .Events(e => e.DataBound("ServicedaysDataBound"))
                           .HtmlAttributes(new {style= "width:100%;flot:left;" /*, data_value_primitive = "true"*/ })
                        )*@
                </div>
                <div class="col-md-4" style="float:left;padding: 0px !important;">

                    @(Html.Kendo().MultiColumnComboBoxFor(m => m.ServiceDurationHours)
                          //.Name("ServiceHours")
                          .DataTextField("Text")
                          .DataValueField("Value")
                          .Filter(FilterType.StartsWith)
                          .DataSource(source =>
                          {
                              source.Read(read =>
                              {
                                  read.Action("GetServiceHours", "WellTasks");//.Data("FilterCategory");
                              });//.ServerFiltering(true);
                          })
                          .Events(e => e.DataBound("ServiceHoursDataBound"))
                          .HtmlAttributes(new {style= "width:100%;flot:left;" /*, data_value_primitive = "true"*/ })
                       )
                    @Html.LabelFor(m => m.ServiceDurationHours, "Hours")

                </div>
                <div class="col-md-4" style="float:left;padding: 0px !important;">


                    @(Html.Kendo().MultiColumnComboBoxFor(m => m.ServiceDurationMinutes)
                          //.Name("ServiceMinutes")
                          .DataTextField("Text")
                          .DataValueField("Value")
                          .Value("00")
                          .Filter(FilterType.StartsWith)
                          .DataSource(source =>
                          {
                              source.Read(read =>
                              {
                                  read.Action("GetServiceMinutes", "WellTasks");//.Data("FilterCategory");
                              });//.ServerFiltering(true);
                          })
                          .Events(e => e.DataBound("ServiceMinutesDataBound"))
                          .HtmlAttributes(new {style= "width:100%;flot:left;" /*, data_value_primitive = "true"*/ })
                       )
                    @Html.LabelFor(m => m.ServiceDurationMinutes, "Minutes")

                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="row">
            <div class="col-md-6">@Html.LabelFor(m => m.LeadTime)</div>
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.LeadTime, new { id = "LeadTime", style = "width:100%" })
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-6">
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(m => m.StageType, "Stage", new { style = "width:100%" })

            </div>
            <div class="col-md-8">

                @(Html.Kendo().MultiColumnComboBox()
                    .Name("StageType")
                    .DataTextField("Stage_Type")
                    .DataValueField("Stage_id")
                    .Placeholder("Select Stage")
                     .DataSource(source =>
                     {
                         source.Read(read =>
                         {
                             read.Action("GetServiceStage", "WellTasks");
                         }).ServerFiltering(true);
                     })
                    .HtmlAttributes(new { style="width:100%"})
                    )
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.ServiceCategoryId, "Category")
            </div>

            <div class="col-md-8">
                @(Html.Kendo().MultiColumnComboBox()
                  .Name("ServiceCategoryId")
                  .DataTextField("Name")
                  .DataValueField("ServiceCategoryId")
                  .Filter(FilterType.StartsWith)
                  .DataSource(source =>
                  {
                      source.Read(read =>
                      {
                          read.Action("GetCategoriesList", "WellTasks");//.Data("FilterCategory");
                      });//.ServerFiltering(true);
                  })
                  .HtmlAttributes(new {style="width:100%" /*, data_value_primitive = "true"*/ })
                )

            </div>

        </div>

    </div>
</div>
<div class="row">
    <div class="form-group col-md-12">
        @Html.HiddenFor(m => m.SeletedDependency)
        @Html.LabelFor(m => m.SeletedDependency,"Dependency")
        <select id="Dependency"></select>
    </div>
</div>
<div class="row">
    <div class="form-group col-md-12">
        @Html.LabelFor(x => x.Description)
        @Html.TextAreaFor(model => model.Description, new { style = "width:100%" })
    </div>
</div>
<div class="row">
    <div class="col-md-2">Active</div>
    <div class="col-md-1">
        @(Html.Kendo().CheckBoxFor(m=>m.IsActive))
    </div>
    <div class="col-md-2">
        @Html.LabelFor(m => m.IsPreSpud, "Is Pre-Spud")
    </div>
    <div class="col-md-1">
        @(Html.Kendo().CheckBoxFor(m=>m.IsPreSpud).Checked(false).HtmlAttributes(new {id= "PreSpud", onchange = "onPreSpudChange();" }))
    </div>
    <div class="col-md-3">
        @Html.LabelFor(m => m.IsBenchMark, "Is Bench Mark")
    </div>
    <div class="col-md-1">
        @(Html.Kendo().CheckBoxFor(m=>m.IsBenchMark).Checked(false).HtmlAttributes(new { id = "BenchMark", onchange = "onBenchMarkChange();" }))
    </div>

    <div @*class="k-edit-field"*@ style="visibility:hidden">
        @Html.TextBoxFor(model => model.ExportToMaster)
    </div>
    <div @*class="k-edit-field"*@ style="visibility:hidden">
        @Html.TextBoxFor(model => model.IsSpecialServices)
    </div>
</div>
<div class="row">
    <div class="col-md-2">Is Biddable</div>
    <div class="col-md-1" style="padding-left:0px;">
        @(Html.Kendo().CheckBoxFor(m=>m.IsBiddable))
    </div>
    <div class="col-md-5" id="ExportMaster">
        <div class="=col-md-8" style="float:left;"> Export to Master</div>
        <div class="col-md-4" style="float:left;">
            @(Html.Kendo().CheckBoxFor(m=>m.ExportToMaster))
        </div>
    </div>
    
    @*<div class="col-md-3">
            @Html.LabelFor(m => m.IsCalendar, "Show At Calendar")
        </div>
        <div class="col-md-1">
            @(Html.Kendo().CheckBoxFor(m=>m.IsCalendar))
        </div>*@
</div>

@{
    Layout = null;
}

@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
<head>
        <script src="~/js/ServiceCompany/dispatchroute.js"></script>
    </head>
<section class="content-header">
    <style>

        #Dispatch {
            height: 100%;
        }

        #outerWrapper {
            overflow: hidden;
        }

        .k-numerictextbox {
            width: 17.4em;
        }

        #map {
           
            top: 2px;
            bottom:0px;
            width: 100%;
            overflow:hidden;
            height:fit-content;
        }

        .marker {
            background-image: url('/img/mapbox-icon.png');
            background-size: cover;
            width: 20px;
            height: 30px;
            border-radius: 50%;
            cursor: pointer;
        }
        .markerstart {
            background-image: url('/img/mapicon-start.png');
            background-size: cover;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            cursor: pointer;
        }
        .mapboxgl-popup {
            max-width: 200px;
        }

        .mapboxgl-popup-content {
            text-align: center;
            font-family: 'Open Sans', sans-serif;
            color: black;
        }

        .k-views-dropdown {
            display: none !important;
        }

        .mapboxgl-canvas-container {
            height: 75vh;
        }

        .mapboxgl-map {
            border: 4px solid #007BFF;
            border-radius: 10px;
        }
        .k-dropdown .k-dropdown-wrap, .k-dropdowntree .k-dropdown-wrap {
            background-color: white !important;
            color: black !important;
        }

        .k-edit-label {
            margin-left: 15px !important;
            margin-top: 5px !important;
        }
        .truckcolor {
            color: indianred;
        }
    </style>
    <style>


        
        .operatorfilter {
            display: inline-block;
            position: absolute;
            right: 0;
        }

            .operatorfilter .k-dropdown {
                display: block;
            }

                .operatorfilter .k-dropdown .k-dropdown-wrap .k-input {
                    background-color: #fff;
                    color: #000;
                }

        .k-dropdown {
            border: 2px solid blue !important;
        }

        @@media (max-width: 570px) {
            .card-header {
                height: auto !important;
            }

            .chart-header, .operatorfilter {
                position: inherit !important;
                display: block !important;
                width: auto !important;
            }
        }

        .k-grid-header .k-header > .k-link {
            text-transform: uppercase;
            font-weight: 900 !important;
            font-size: 12px !important;
        }

        .k-edit-buttons {
            border-style: none;
        }

        .k-grid .k-grid-add:hover {
            color: #fff !important;
        }

        .k-link k-state-selected {
            padding-top: 17px !important;
        }

        .k-pager-numbers {
            padding-top: 17px !important;
        }

        .k-grid .k-grid-add, .k-grid .k-grid-add:hover {
            color: #000 !important;
            background-color: #fff !important;
            border: 0;
        }

        .k-window-content #sidebar .k-edit-label {
            margin-left: -50px;
        }

        .k-window-content .k-edit-form-container {
            width: inherit;
        }

        .k-grid-Details, .k-grid-Details:hover, .k-grid-Delete, .k-grid-Delete:hover {
            background-color: #fff;
        }

        .k-grid-edit, .k-grid-Delete, .k-grid-Details {
            border: 1px solid #007BFF;
            border-radius: 10px;
        }

        .k-window-titlebar {
            background-color: #007BFF;
            color: white;
        }
        .k-grid tr:hover {
            background: transparent;
        }
    </style>
</section>
<section class="content">
    <div class="leftpart">
        <div style="padding-bottom:10px">
            <div class="col-md-6" style="padding-left:0px !important;display: inline-block;">
                <button class="btn btn-primary" id="btnAssignUser" onclick="LoadDispatchRouteUsers()"><i class='fa fa-search'></i> Assign User</button>
                <button class="btn btn-primary" id="btnUsersLocation" onclick="LoadUserRoutes()"><i class='fa fa-map-marker'></i>  Users Location </button>
            </div>
            <div class="col-md-5 float-right" style="display: inline-block; padding-right: 0px !important">
                <button class="btn btn-primary float-right" id="btnRefreshRoutes" onclick="RefreshRoutes()"><i class="fa fa-refresh"></i> Refresh All Routes</button>
            </div>
            <input type="hidden" id="hdnCurrentUser" />
            <input type="hidden" id="hdnDispatchNotes" />
            <input type="hidden" id="hdnDispatchId" />

        </div>
        <div>
            @(Html.Kendo().Grid<WellAI.Advisor.Model.ServiceCompany.Models.DispatchRoutesModel>()
            .Name("Dispatch")
            .HtmlAttributes(new { @class = "ra-section" })
            .Columns(columns =>
            {
                columns.Bound(p => p.username).Title("User").Hidden().ClientGroupHeaderTemplate("<label class='customMap' for='user'>User : #= value # </label> <button class='btn btn-primary customEdit'><i class='fa fa-plus'></i></button>");
                columns.Bound(p => p.rigname).Title("Rig").ClientTemplate("#= rigwellandlocation #").Title("Location");
                columns.Bound(p => p.dispatchid).Hidden(true);
                columns.Bound(p => p.dispatchnotes).Hidden(true);
                columns.Bound(p => p.userid).Hidden(true);
                columns.Bound(p => p.customer).Title("Customer").Hidden(true);;

                columns.Command(command =>
                {
                    command.Custom("Delete").Visible("deleteVisible").Text("<i class='fa fa-trash CustomDelete' style='font-size:20px; text-align: right;color:black;'></i>").Click("DispatchDelete");
                }).Title("Action").Width(70);

            })
            .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_AddDispatch").Window(w => w.Title("Assign Dispatch").Width(1000)))
            .Pageable(p =>
                        p.Info(true)
                         .Numeric(false)
                         .PreviousNext(false)
                    )
             .Scrollable(scrollable => scrollable.Enabled(true))
            //.Sortable()
            @*.Filterable()*@
            .Reorderable(r => r.Columns(true))
            .Resizable(r => r.Columns(true))
            .DataSource(dataSource => dataSource
                    .Ajax()
                    .Read(read => read.Action("GetDispatchList", "DispatchSRV"))
                    .PageSize(20)
                    .Model(model => model.Id(p => p.dispatchid))
            .Group(x =>
            {
                x.Add(y => y.username);
            }).Sort(x => { x.Add("userName").Ascending(); x.Add("routeOrder").Ascending(); })
            ).Events(e =>
            {
                e.DataBound("onDataBound");
                e.Edit("gridEdit");
            })
            )
        </div>

    </div>
    <div class="rightpart">
        <div class="col-md-4 float-right ml-0 mapicons" style="z-index: 99; position: relative; top: 4rem;right:35px">
            <button class="btn float-right" id="btnTruck" onclick="LoadAllUserPaths()"><i class="fa fa-truck fa-2x"></i></button>
            <button class="btn float-right" id="btnLocation" onclick="LoadUserLocation()"><i class="fa fa-map-marker fa-2x"></i></button>
            <button class="btn float-right" id="btnDispatchNotes" onclick="LoadDispatchNotes()"><i class="fa fa-file fa-2x"></i></button>
        </div>
        <div id="menu">
            <input id="satellite-v9" type="radio" name="rtoggle" value="satellite">
            <!-- See a list of Mapbox-hosted public styles at -->
            <!-- https://docs.mapbox.com/api/maps/styles/#mapbox-styles -->
            <label for="satellite-v9">Satellite</label>
            <input id="streets-v11" type="radio" name="rtoggle" value="streets" checked="checked">
            <label for="streets-v11">Streets</label>
        </div>
        <div id="map">
        </div>
    </div>
    <div id="dialog"></div>

</section>

@(Html.Kendo().Window().Name("DispatchAssignUserWindow")
    .Title("Advisor Users")
    .Visible(false)
    .Modal(true)
    .Content(@<text><div id="wndContent">Loading...</div></text>)
    .Actions(actions => actions
        .Close()
    )
    .Draggable(true)
    .Width(1200)

)
@(Html.Kendo().Window().Name("DispatchAssignWindow")
    .Title("Assign Dispatch")
    .Visible(false)
    .Modal(true)
    .Content(@<text><div id="wndContent">Loading...</div></text>)
    .Actions(actions => actions
        .Close()
    )
    .Draggable(true)
    .Width(900)

)
@(Html.Kendo().Window().Name("DispatchNotesWindow")
            .Title("Dispatch Instructions / Notes")
            .Visible(false)
            .Modal(true)
            .Content(@<text><div id="wndContent">Loading...</div></text>)
            .Actions(actions => actions
                .Close()
            )
            .Draggable(true)
            .Width(700)
    )
@(Html.Kendo().Window().Name("DispatchUserRoutesWindow")
    .Title("Reorder Destinations")
    .Visible(false)
    .Modal(true)
    .Content(@<text><div id="wndContent">Loading...</div></text>)
    .Actions(actions => actions
        .Close()
    )
    .Draggable(true)
    .Width(500)
    .Height(510)

)
	

<style>

    html,
    body {
        margin: 0;
        padding: 0;
        height: 100%;
    }

    .content {
        height: 100%;
    }

    html {
        overflow: hidden;
    }

    .customEdit {
        margin-left: 10px;
    }
    
    .content-wrapper {
        margin-top: 35px !important;
    }

    /*.breadcrumb-wrap {
        padding-top: 15px;
        height: 50px;
        margin-top: 40px;
    }*/

    #Dispatch {
        height: 100%;
    }

    html {
        overflow: hidden;
    }

    .rightpart {
        min-height: 100% !important;
        margin-left: 5px;
    }

    .k-grid-header .k-header > .k-link {
        text-transform: uppercase;
        font-weight: 900 !important;
        font-size: 12px !important;
    }

    .k-pager-wrap.k-pager-lg .k-pager-numbers li:not(.k-current-page), .k-pager-wrap.k-pager-md .k-pager-numbers li:not(.k-current-page), .k-pager-wrap.k-pager-sm .k-pager-numbers li:not(.k-current-page) {
        display: block !important;
    }

    .k-pager-wrap.k-pager-lg .k-pager-nav + .k-pager-numbers-wrap, .k-pager-wrap.k-pager-md .k-pager-nav + .k-pager-numbers-wrap, .k-pager-wrap.k-pager-sm .k-pager-nav + .k-pager-numbers-wrap {
        width: unset !important;
        height: calc(1*(2px + 0.75rem + 1.5em));
        box-sizing: border-box;
        border-color: inherit;
        margin: 0 0.375rem;
    }

    .k-pager-wrap.k-pager-lg .k-pager-numbers .k-link,
    .k-pager-wrap.k-pager-lg .k-pager-numbers .k-state-selected, .k-pager-wrap.k-pager-md .k-pager-numbers .k-link,
    .k-pager-wrap.k-pager-md .k-pager-numbers .k-state-selected, .k-pager-wrap.k-pager-sm .k-pager-numbers .k-link,
    .k-pager-wrap.k-pager-sm .k-pager-numbers .k-state-selected {
        margin: 0;
        border-width: 0;
        width: unset !important;
        height: unset !important;
    }

    .k-pager-numbers {
        display: contents !important;
    }

    div.k-loading-mask {
        z-index: 3;
    }

    .chathisttitle {
        color: #ffffff;
    }

    .leftpart {
        width: 38%;
        display: inline-block;
        vertical-align: top;
    }

    .rightpart {
        width: 61%;
        display: inline-block;
    }

    .content {
    }

    .k-pager-numbers {
        padding-top: 11px;
    }

    .km-widget {
        border: 4px solid #007BFF;
        border-radius: 10px;
    }

    .k-pos-left {
        right: 0;
        left: unset;
    }

    .k-pos-top {
        top: unset;
        bottom: 10px;
    }

    .k-window div.k-window-content {
        overflow: hidden;
    }

    label.customMap {
        cursor: pointer;
    }
    .k-grid tbody tr:not(.k-grouping-row) {
        cursor: move;
    }
</style>
<script>

  


    function userInfo() {
        return {
            user: $("#hdnCurrentUser").val()
        }
    }
    var gridElement = $("#Dispatch");

   

    function resizeWrapper() {
      
    }

    function gridEdit(e) {
       
    }

     function resizeGrid() {
       
        var gridElement = $("#Dispatch"),
            dataArea = gridElement.find(".k-grid-content"),
            gridHeight = gridElement.innerHeight(),
            otherElements = gridElement.children().not(".k-grid-content"),
            otherElementsHeight = 0;

        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });

        console.log('gridHeight - parseFloat(otherElementsHeight)' + gridHeight - parseFloat(otherElementsHeight));
        //dataArea.height($("#map").height()-155);
        dataArea.height(parseInt($(window).height())-330)
         $("#map").height(parseInt($("#Dispatch").height()));
    }

    $(document).ready(function () {
       $(window).resize(function () {
        resizeGrid();
    });

        //resizeWrapper();
        resizeGrid();
    });

    window.addEventListener('resize', function (event) {
        var newWidth = window.innerWidth;
        var newHeight = window.innerHeight;
    });
</script>

<script>
    //public - pk.eyJ1Ijoia2FydGhpa3RoYW5nYXZlbCIsImEiOiJjbDFkZHk5MjYwZ21lM2NwMm9tcTVueGMyIn0.jufh1E3v_JpXizuN7Rfudg
    //Well AI - pk.eyJ1Ijoid2VsbC1haSIsImEiOiJjbDFxZ25yMnIwN3c3M2JzNml1dWdpMmR0In0.l-lDzOnU03tFScjiMkRObg
    mapboxgl.accessToken = 'pk.eyJ1Ijoid2VsbC1haSIsImEiOiJjbDFxZ25yMnIwN3c3M2JzNml1dWdpMmR0In0.l-lDzOnU03tFScjiMkRObg';
    const map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/streets-v11',//'mapbox://styles/karthikthangavel/cl1dlz8mi001m15tdhtkx558w',
        center: [-102.36896137371849, 31.846556737999546],
        zoom: 8
    });

    $.when(map.on('load', () => {
        map.addSource('route', {
            'type': 'geojson',
            'data': {
                'type': 'Feature',
                'properties': {},
                'geometry': {
                    'type': 'LineString',
                    'coordinates': [
                    ]
                }
            }
        });
        map.addLayer({
            'id': 'route',
            'type': 'line',
            'source': 'route',
            'layout': {
                'line-join': 'round',
                'line-cap': 'round'
            },
            'paint': {
                'line-color': '#888',
                'line-width': 8
            }
        });

        map.addControl(new mapboxgl.NavigationControl());
    })
    ).then(function (data, textStatus, jqXHR) {
        //LoadAllUserDestinations();
        //LoadUserRoutes();
    });
    map.on('idle', function () {
        map.resize()
    })

    const layerList = document.getElementById('menu');
    const inputs = layerList.getElementsByTagName('input');

    for (const input of inputs) {
        input.onclick = (layer) => {
            const layerId = layer.target.id;
            map.setStyle('mapbox://styles/mapbox/' + layerId);
        };
    }

</script>
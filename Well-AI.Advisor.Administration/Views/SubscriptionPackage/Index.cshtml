@{
    ViewData["Title"] = "Subcription Package";
    string SubscriptionType = HttpContextAccessor.HttpContext.Session.GetString("subscriptiontype");
    //if (SubscriptionType != "AdvisorDispatch")
    //{
    //    Layout = "~/Views/Shared/_Layout.cshtml";
    //}
    //else
    //{
    //Layout = "~/Views/Shared/_LayoutAdvisorDispatch.cshtml";
    //}
}


@model WellAI.Advisor.Model.ServiceCompany.Models.AuctionBidsModel
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

<section class="content-header">
    <style>

        .k-grid-header .k-header > .k-link {
            text-transform: uppercase;
            font-weight: 900 !important;
            font-size: 12px !important;
        }

        a.k-button.k-button-icontext.k-grid-Details {
            background: #fff;
            color: #000;
            border-radius: 10px !important;
        }

        .Upcoming {
            background-color: red;
            border-color: white !important;
            border-width: 4px !important;
            color: white;
            font-weight: bold !important;
            text-transform: uppercase !important;
        }

        .Active {
            background-color: #77BD27;
            border-color: white !important;
            border-width: 4px !important;
            color: white;
            font-weight: bold !important;
            text-transform: uppercase !important;
        }

        .closed {
            background-color: #F4AF00;
            border-color: white !important;
            border-width: 4px !important;
            color: white;
            font-weight: bold !important;
            text-transform: uppercase !important;
        }

        .InActive {
            background-color: purple;
            border-color: white !important;
            border-width: 4px !important;
            color: white;
            font-weight: bold !important;
            text-transform: uppercase !important;
        }

        .OnSite {
            background-color: dodgerblue;
            border-color: white !important;
            border-width: 4px !important;
            color: white;
            font-weight: bold !important;
            text-transform: uppercase !important;
        }

        .auction-wrapper {
            color: #fff;
        }

        .k-link k-state-selected {
            padding-top: 17px !important;
        }

        .k-pager-numbers {
            padding-top: 17px !important;
        }

        .auctiontop {
            margin-bottom: 10px;
            display: flex;
        }

        .k-i-filter-clear {
            color: #007bff !important;
        }

        .topblockactive, .topblockinactive, .topblockonsite, .topblockonroute, .topblockoverdue {
            display: inline-block;
            width: 32%;
            margin-bottom: 20px;
            background-color: #fff;
            color: #000;
            text-align: center;
            border-radius: 10px;
            border: 4px solid #007BFF;
        }

        .topblockactive {
            border: 4px solid #77BD27;
            margin-left: 2px;
        }

        .topblockinactive {
            border: 4px solid purple;
            margin-left: 10px;
        }

        .topblockonsite {
            border: 4px solid #007BFF;
            margin-left: 10px;
        }

        .topblockonroute {
            border: 4px solid #F4AF00;
            margin-left: 10px;
        }

        .topblockoverdue {
            border: 4px solid red;
            margin-left: 10px;
        }

        .lastmonthtitle {
            margin-bottom: 5px;
            font-weight: bold;
        }

        .topblocktitle1 {
            margin-bottom: 20px;
            background-color: #007BFF;
            color: white;
            text-transform: uppercase;
            font-weight: bold;
        }

        .k-grid-content {
            height: auto !important;
        }

        .topblocktitle2 {
            margin-bottom: 20px;
            background-color: #77BD27;
            color: white;
            text-transform: uppercase;
            font-weight: bold;
        }

        .topblockinactivetitle {
            margin-bottom: 20px;
            background-color: purple;
            color: white;
            text-transform: uppercase;
            font-weight: bold;
        }

        .topblockonsitetitle {
            margin-bottom: 20px;
            background-color: #007BFF;
            color: white;
            text-transform: uppercase;
            font-weight: bold;
        }

        .topblockonroutetitle {
            margin-bottom: 20px;
            background-color: #F4AF00;
            color: white;
            text-transform: uppercase;
            font-weight: bold;
        }

        .topblockoverduetitle {
            margin-bottom: 20px;
            background-color: red;
            color: white;
            text-transform: uppercase;
            font-weight: bold;
        }



        .topblocktitle3 {
            margin-bottom: 20px;
            background-color: #F4AF00;
            color: white;
            text-transform: uppercase;
            font-weight: bold;
        }

        .startedcount, .startedvalue {
            display: inline-block;
        }

        .startedcount {
            margin-left: 5px !important;
        }

        .startedvalue {
            margin-right: 5px !important;
        }

            .startedcount > span, .startedvalue > span {
                display: block;
                text-transform: uppercase;
            }

        .topblock-top {
            margin-top: 20px;
        }

        .topblock-bottom {
            border-top: 1px solid grey;
        }

        .activelastmonthdate {
            margin-top: 50px;
        }

        .bgInitiate {
            background-color: #00B855 !important;
        }

        .bgPlan {
            background-color: #3288B7 !important;
        }

        .bgEvaluate {
            background-color: #B87033 !important;
        }

        .allprojectbids {
            display: inline-block;
            color: #fff;
            margin-right: 10px;
        }

        .bids-search {
            margin-left: 25%;
            margin-bottom: 10px;
        }


            .bids-search .labelchart {
                display: inline-block;
            }

        .k-filtercell {
            border: 1px solid #007BFF;
        }

        .cntSize {
            font-size: 2.5rem;
        }

        /*.content-wrapper {
            margin-top: 20px !important;*/
        /*}*/
    </style>
    <script>
        //function onDataBound() {
        //    var grid = this;
        //    grid.tbody.find('tr').each(function () {
        //        var dataItem = grid.dataItem(this);

        //        $(this).addClass('bg' + dataItem.BidStatusName);
        //    })
        //}

        function onBidsGridRead(e) {
        }
    </script>
</section>
@*@(Html.Kendo().Window().Name("Details")
        .Title("Project Details")
        .Visible(false)
        .Content(@<text><div id="wndContent">Loading....</div></text>)
        .Modal(true)
        .Draggable(true)
        .Width(1000)
    )*@

<script>
    function onSubcriptionDataBound(e) {
        counter = 1;
        var columns = e.sender.columns;
        var columnIndex = this.wrapper.find(".k-grid-header [data-field=" + "DriverStatus" + "]").index();

        //var rows = e.sender.tbody.children();
        //for (var j = 0; j < rows.length; j++) {
        //    var row = $(rows[j]);
        //    var dataItem = e.sender.dataItem(row);

        //    var units = dataItem.get("DriverStatus");

        //    var cell = row.children().eq(columnIndex);
        //    cell.addClass(templateFunction(units));
        //}
    }
</script>
@*<script id="templateddl" type="text/kendo-tmpl">
        @(Html.Kendo().DropDownList()
            .Name("myDropDown")
            .DataValueField("StatusId")
            .DataTextField("StatusName")
            .BindTo((System.Collections.IEnumerable)ViewData["DispatchStatus"])
           .ToClientTemplate()
        )
    </script>*@
<!-- Main content -->

<section class="content">
    <div class="row">
        <div id="PageHeading" class="col-md-6"><strong><b>Subcription Package</b></strong></div>
    </div>
    <div class="auction-bottom">
        @(Html.Kendo().Grid<WellAI.Advisor.Model.SubcriptionPackage.SubcriptionPackageModel>()
            .Name("Subscription1Grids")
            .Columns(columns =>
            {
                columns.Bound(p => p.SubscriptionId).Title("ID").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(50);
                columns.Bound(p => p.SubscriptionName).Title("NAME").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(60);
                columns.Bound(p => p.SubscriptionType).Title("Subscription Type").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(60);
                columns.Bound(p => p.PricePerMonth).Title("Price Per Month").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(50);
               // columns.Bound(p => p.PricePerYear).Title("Price Per Year").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(80);
                columns.Bound(p => p.Description).Title("Description").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(90);
                columns.Bound(p => p.Features).Title("Features").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(80);
               // columns.Bound(p => p.SubscriptionStatus).Title("Status").Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false))).Width(80);
               // columns.Bound(p => p.CreatedDate).Title("Created Date").Format("{0:MM/dd/yyyy}").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte").ShowOperators(false))).Width(80);
              //  columns.Bound(p => p.ModifiedDate).Title("Modified Date").Format("{0:MM/dd/yyyy}").Filterable(ftb => ftb.Cell(cell => cell.Operator("gte").ShowOperators(false))).Width(80);
            })
            .ToolBar(toolbar => toolbar.Create().Text("Add Subscription"))
            .Filterable()
            //.Filterable(ftb => ftb.Mode(GridFilterMode.Row))
            .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("Edit Subcription").Window(w => w.Title("Edit Subscription").Width(600)))
            .Pageable(p =>
                        p.Info(true)
                         .Numeric(false)
                         .PreviousNext(false)
                    )
                .Scrollable(scrollable => scrollable.Virtual(true))
            .Sortable()
            .DataSource(dataSource => dataSource
                .Ajax()
                 .PageSize(10)
                 .Sort(sort =>
                 {
                     sort.Add("SubscriptionName").Ascending();
                 })
                .Read(read => read.Action("GetSubscriptionPackages", "SubscriptionPackage"))
                 .Model(model => model.Id(p => p.SubscriptionId))

            ).Events(e =>
            {
                e.DataBound("onSubcriptionDataBound");
                //e.Save("OnGrigSave");
                //e.Edit("gridEdit");
                //e.DataBound("DataBound");
            })
            )

    </div>

</section>


<script type="text/x-kendo-template" id="template">
    <div id="details-container">
        <h2>#= AuctionBidStatusName #</h2>
        <em>Start on #= kendo.toString(ProjectStartDate, 'MM/dd/yyyy') #</em>
        <p>TenantID: #= TenantID #</p>
    </div>
</script>

<script type="text/x-kendo-template" id="template">
    <div id="details-container">
        <h2>#= ProposalId #</h2>
        <em>Start on #= kendo.toString(AuctionEnd, 'MM/dd/yyyy') #</em>
        <p>Description: #= Subject #</p>

    </div>
</script>


<script type="text/javascript">

    $(document).ready(function () {
        setInterval(CountsRefresh, 60000);
        RefreshGrid();
        $(".multidest").kendoSwitch();
    });

    function RefreshGrid() {
        var IntTime = 300000;
        setInterval(function () {
            $("#auctions").data("kendoGrid").dataSource.read();
        }, IntTime);
    }

    function CountsRefresh() {
        $.ajax({
            url: '/ProjectAuctionsSRV/Counts',
            type: 'GET',
            success: function (ResponseData) {
                document.getElementById('ActiveBidsCount').innerHTML = ResponseData.ActiveBidsCount;
                document.getElementById('ActiveBidsValue').innerHTML = ResponseData.ActiveBidsValue == 0 ? "$" + 0.00 : "$" + ResponseData.ActiveBidsValue;
                document.getElementById('AwardedBidsThisMonthCount').innerHTML = ResponseData.AwardedBidsThisMonthCount;
                document.getElementById('AwardedBidsThisMonthValue').innerHTML = ResponseData.AwardedBidsThisMonthValue == 0 ? "$" + 0.00 : "$" + ResponseData.AwardedBidsThisMonthValue;
                document.getElementById('ProjectsStartedThisMonthCount').innerHTML = ResponseData.ProjectsStartedThisMonthCount;
                document.getElementById('ProjectsStartedThisMonthValue').innerHTML = ResponseData.ProjectsStartedThisMonthValue == 0 ? "$" + 0.00 : "$" + ResponseData.ProjectsStartedThisMonthValue;
            }
        });

    }

    function funFilterStatusList(values) {
        var grid = $("#auctions").data("kendoGrid");
        var dataSource = grid.dataSource;
        dataSource.filter(
            {
                logic: "and",
                filters: [
                    { field: "AuctionBidStatusName", operator: "eq", value: values }
                ]
            });
    }

    function UpcomingCounts() {
        funFilterStatusList("Upcoming");
    }
    function ActiveCounts() {
        funFilterStatusList("Active");
    }
    function CompletedCounts() {
        funFilterStatusList("Completed");
    }


    $(function () {

        var grid = $("#auctions").data("kendoGrid");
        var dataSource = grid.dataSource;
        if (sessionStorage.getItem("AwardedBids") === 'Completed') {
            dataSource.filter(
                {
                    logic: "and",
                    filters: [

                        { field: "AuctionBidStatusName", operator: "eq", value: "Completed" }
                    ]
                });
        } else if (sessionStorage.getItem("OpenBidsCount") === 'Active') {
            dataSource.filter(
                {
                    logic: "and",
                    filters: [
                        { field: "AuctionBidStatusName", operator: "eq", value: "Active" }
                    ]
                });
        } else {
            dataSource.filter({});
        }
        sessionStorage.clear();
    });




    var counter = 1;
    function templateFunction(units) {
        switch (units) {
            case "ACTIVE":
                return "Active";
            case "OVERDUE":
                return "Upcoming";
            case "ON-ROUTE":
                return "closed";
            case "INACTIVE":
                return "InActive";
            case "ON-SITE":
                return "OnSite";
        }
    }
    var counter = 1;



    function onCancelClick() {
        window.location.href = "/ProjectAuctionsSRV";
    }

    function renderNumber(data) {
        return counter++;
    }

    var detailsTemplate = kendo.template($("#template").html());



    function downloadFile(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var id = dataItem.AttachmentId;
        window.location = '/ProjectAuctions/Download?AttachmentId=' + id;

    }

</script>